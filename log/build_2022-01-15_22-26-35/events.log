[0.000000] (-) TimerEvent: {}
[0.000996] (-) JobUnselected: {'identifier': 'my_package'}
[0.002461] (-) JobUnselected: {'identifier': 'turtlesim'}
[0.002616] (coding_challenge) JobQueued: {'identifier': 'coding_challenge', 'dependencies': OrderedDict()}
[0.002722] (coding_challenge) JobStarted: {'identifier': 'coding_challenge'}
[0.009944] (coding_challenge) JobProgress: {'identifier': 'coding_challenge', 'progress': 'cmake'}
[0.013293] (coding_challenge) JobProgress: {'identifier': 'coding_challenge', 'progress': 'build'}
[0.013391] (coding_challenge) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/usama/autoronto/coding_test/build/coding_challenge', '--', '-j8', '-l8'], 'cwd': '/home/usama/autoronto/coding_test/build/coding_challenge', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_CA:en'), ('USER', 'usama'), ('SSH_AGENT_PID', '1052'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/usama'), ('OLDPWD', '/home/usama/autoronto'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '808'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('IM_CONFIG_PHASE', '1'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'usama'), ('JOURNAL_STREAM', '8:15642'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'usama'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/usama-VirtualBox:@/tmp/.ICE-unix/1094,unix/usama-VirtualBox:/tmp/.ICE-unix/1094'), ('INVOCATION_ID', 'ebe83f797627418eb01b1750240dc99c'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/25a2a2f3_5d8f_4bf3_bba5_f083ed063ea2'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_CA.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.573'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '0'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/usama/autoronto/coding_test/build/coding_challenge'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[0.054079] (coding_challenge) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target listener\x1b[0m\n'}
[0.074776] (coding_challenge) StdoutLine: {'line': b'[ 50%] Built target talker\n'}
[0.084188] (coding_challenge) StdoutLine: {'line': b'[ 75%] \x1b[32mBuilding CXX object CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o\x1b[0m\n'}
[0.100171] (-) TimerEvent: {}
[0.200845] (-) TimerEvent: {}
[0.301420] (-) TimerEvent: {}
[0.401992] (-) TimerEvent: {}
[0.502642] (-) TimerEvent: {}
[0.606427] (-) TimerEvent: {}
[0.709203] (-) TimerEvent: {}
[0.811590] (-) TimerEvent: {}
[0.912120] (-) TimerEvent: {}
[1.016741] (-) TimerEvent: {}
[1.052547] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid MinimalSubscriber::callback(const Int8MultiArray&, const Int8&) const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.052849] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:82:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kpassing \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<signed char, std::allocator<signed char> >\x1b[m\x1b[K\xe2\x80\x99 as \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 argument discards qualifiers [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[1.052996] (coding_challenge) StderrLine: {'line': b'   82 |           result.push_back(i\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.053061] (coding_challenge) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.053111] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/vector:67\x1b[m\x1b[K,\n'}
[1.053159] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:17\x1b[m\x1b[K:\n'}
[1.053207] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/stl_vector.h:1200:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  in call to \xe2\x80\x98\x1b[01m\x1b[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::value_type = signed char]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.053255] (coding_challenge) StderrLine: {'line': b' 1200 |       \x1b[01;36m\x1b[Kpush_back\x1b[m\x1b[K(value_type&& __x)\n'}
[1.053301] (coding_challenge) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.053346] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:83:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kpassing \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<signed char, std::allocator<signed char> >\x1b[m\x1b[K\xe2\x80\x99 as \xe2\x80\x98\x1b[01m\x1b[Kthis\x1b[m\x1b[K\xe2\x80\x99 argument discards qualifiers [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[1.053395] (coding_challenge) StderrLine: {'line': b'   83 |           result.push_back(map[temp]\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.053442] (coding_challenge) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.053486] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/vector:67\x1b[m\x1b[K,\n'}
[1.053538] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:17\x1b[m\x1b[K:\n'}
[1.053583] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/stl_vector.h:1200:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  in call to \xe2\x80\x98\x1b[01m\x1b[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = signed char; _Alloc = std::allocator<signed char>; std::vector<_Tp, _Alloc>::value_type = signed char]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.053629] (coding_challenge) StderrLine: {'line': b' 1200 |       \x1b[01;36m\x1b[Kpush_back\x1b[m\x1b[K(value_type&& __x)\n'}
[1.053671] (coding_challenge) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.118308] (-) TimerEvent: {}
[1.120383] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.121039] (coding_challenge) StderrLine: {'line': b'/opt/ros/foxy/include/message_filters/synchronizer.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Connection message_filters::Synchronizer<Policy>::registerCallback(const C&, T*) [with C = void (MinimalSubscriber::*)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const; T = MinimalSubscriber; Policy = message_filters::sync_policies::ApproximateTime<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.121113] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:46:71:\x1b[m\x1b[K   required from here\n'}
[1.121169] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kmessage_filters::Signal9<std_msgs::msg::Int8MultiArray_<std::allocator<void> >, std_msgs::msg::Int8_<std::allocator<void> >, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType, message_filters::NullType>::addCallback(void (MinimalSubscriber::* const&)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const, MinimalSubscriber*&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.121285] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[1.121333] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.121375] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.121421] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.121464] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:170:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4, class P5, class P6, class P7, class P8> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(const std::function<void(P0, P1, P2, P3, P4, P5, P6, P7, P8)>&) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; P7 = P7; P8 = P8; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.121532] (coding_challenge) StderrLine: {'line': b'  170 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(const std::function<void(P0, P1, P2, P3, P4, P5, P6, P7, P8)>& callback)\n'}
[1.121573] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.121612] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:170:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.121652] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.121689] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(P0, P1, P2, P3, P4, P5, P6, P7, P8)>\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::* const)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.121727] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.121762] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.121799] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.121835] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.121873] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:180:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1)) [with P0 = P0; P1 = P1; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.121966] (coding_challenge) StderrLine: {'line': b'  180 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1))\n'}
[1.122013] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.122055] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:180:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.122112] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.122154] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(P0, P1)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::*)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.122200] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.122245] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.122282] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.122376] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.122420] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:186:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2)) [with P0 = P0; P1 = P1; P2 = P2; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.122472] (coding_challenge) StderrLine: {'line': b'  186 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2))\n'}
[1.122820] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.122872] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:186:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.122914] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.122953] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(P0, P1, P2)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::*)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.122994] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.123031] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.123109] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.123155] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.123194] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:192:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.123291] (coding_challenge) StderrLine: {'line': b'  192 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3))\n'}
[1.123378] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.123428] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:192:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.123471] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.123508] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(P0, P1, P2, P3)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::*)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.123551] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.123588] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.123624] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.123658] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.123698] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:198:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.123737] (coding_challenge) StderrLine: {'line': b'  198 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4))\n'}
[1.123775] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.123813] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:198:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.123851] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.123888] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(P0, P1, P2, P3, P4)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::*)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.123930] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.123968] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.124004] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.124071] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.124176] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:204:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4, class P5> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4, P5)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.124224] (coding_challenge) StderrLine: {'line': b'  204 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4, P5))\n'}
[1.124263] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.124300] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:204:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.124337] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.124373] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(P0, P1, P2, P3, P4, P5)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::*)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.124414] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.124450] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.124486] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.124520] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.124557] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:210:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4, class P5, class P6> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4, P5, P6)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.124599] (coding_challenge) StderrLine: {'line': b'  210 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4, P5, P6))\n'}
[1.124634] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.124669] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:210:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.124710] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.124747] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(P0, P1, P2, P3, P4, P5, P6)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::*)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.124791] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.124828] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.124863] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.124898] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.124933] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:216:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4, class P5, class P6, class P7> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4, P5, P6, P7)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; P7 = P7; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.124971] (coding_challenge) StderrLine: {'line': b'  216 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4, P5, P6, P7))\n'}
[1.125138] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.125268] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:216:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.125331] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.125384] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(P0, P1, P2, P3, P4, P5, P6, P7)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::*)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.125441] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.125489] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.125533] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.125578] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.125629] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:222:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class P0, class P1, class P2, class P3, class P4, class P5, class P6, class P7, class P8> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (*)(P0, P1, P2, P3, P4, P5, P6, P7, P8)) [with P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; P7 = P7; P8 = P8; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.125682] (coding_challenge) StderrLine: {'line': b'  222 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(*callback)(P0, P1, P2, P3, P4, P5, P6, P7, P8))\n'}
[1.125729] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.125773] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:222:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.125816] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.125852] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  mismatched types \xe2\x80\x98\x1b[01m\x1b[Kvoid (*)(P0, P1, P2, P3, P4, P5, P6, P7, P8)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::*)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.125898] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.125937] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.125975] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.126103] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.126185] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:228:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1), T*) [with T = T; P0 = P0; P1 = P1; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.126242] (coding_challenge) StderrLine: {'line': b'  228 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1), T* t)\n'}
[1.126285] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.126324] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:228:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.126362] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.126488] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  types \xe2\x80\x98\x1b[01m\x1b[Kvoid (T::)(P0, P1)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99 have incompatible cv-qualifiers\n'}
[1.126722] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.126813] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.126869] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.126908] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.126948] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:234:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.127029] (coding_challenge) StderrLine: {'line': b'  234 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2), T* t)\n'}
[1.127071] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.127109] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:234:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.127148] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.127185] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  types \xe2\x80\x98\x1b[01m\x1b[Kvoid (T::)(P0, P1, P2)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99 have incompatible cv-qualifiers\n'}
[1.127224] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.127261] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.127295] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.127372] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.127432] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:240:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.127487] (coding_challenge) StderrLine: {'line': b'  240 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3), T* t)\n'}
[1.127526] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.127562] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:240:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.127598] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.127675] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  types \xe2\x80\x98\x1b[01m\x1b[Kvoid (T::)(P0, P1, P2, P3)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99 have incompatible cv-qualifiers\n'}
[1.127734] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.127776] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.127815] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.127851] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.127888] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:246:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3, class P4> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3, P4), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.127928] (coding_challenge) StderrLine: {'line': b'  246 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3, P4), T* t)\n'}
[1.127994] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.128036] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:246:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.128075] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.128114] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  types \xe2\x80\x98\x1b[01m\x1b[Kvoid (T::)(P0, P1, P2, P3, P4)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99 have incompatible cv-qualifiers\n'}
[1.128157] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.128192] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.128226] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.128262] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.128296] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:252:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3, class P4, class P5> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3, P4, P5), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.128339] (coding_challenge) StderrLine: {'line': b'  252 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3, P4, P5), T* t)\n'}
[1.128374] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.128409] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:252:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.128443] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.128480] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  types \xe2\x80\x98\x1b[01m\x1b[Kvoid (T::)(P0, P1, P2, P3, P4, P5)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99 have incompatible cv-qualifiers\n'}
[1.128517] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.128553] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.128587] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.128621] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.128657] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:258:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3, class P4, class P5, class P6> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3, P4, P5, P6), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.128701] (coding_challenge) StderrLine: {'line': b'  258 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3, P4, P5, P6), T* t)\n'}
[1.128739] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.128774] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:258:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.128812] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.128848] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  types \xe2\x80\x98\x1b[01m\x1b[Kvoid (T::)(P0, P1, P2, P3, P4, P5, P6)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99 have incompatible cv-qualifiers\n'}
[1.128885] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.128939] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.128985] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.129024] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.129061] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:264:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T, class P0, class P1, class P2, class P3, class P4, class P5, class P6, class P7> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(void (T::*)(P0, P1, P2, P3, P4, P5, P6, P7), T*) [with T = T; P0 = P0; P1 = P1; P2 = P2; P3 = P3; P4 = P4; P5 = P5; P6 = P6; P7 = P7; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.129109] (coding_challenge) StderrLine: {'line': b'  264 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K(void(T::*callback)(P0, P1, P2, P3, P4, P5, P6, P7), T* t)\n'}
[1.129145] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.129249] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:264:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.129303] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.129394] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  types \xe2\x80\x98\x1b[01m\x1b[Kvoid (T::)(P0, P1, P2, P3, P4, P5, P6, P7)\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kvoid (MinimalSubscriber::)(const std_msgs::msg::Int8MultiArray_<std::allocator<void> >&, const std_msgs::msg::Int8_<std::allocator<void> >&) const\x1b[m\x1b[K\xe2\x80\x99 have incompatible cv-qualifiers\n'}
[1.129448] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.129526] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.129579] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:47\x1b[m\x1b[K,\n'}
[1.129621] (coding_challenge) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.129659] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:270:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class C> message_filters::Connection message_filters::Signal9<M0, M1, M2, M3, M4, M5, M6, M7, M8>::addCallback(C&) [with C = C; M0 = std_msgs::msg::Int8MultiArray_<std::allocator<void> >; M1 = std_msgs::msg::Int8_<std::allocator<void> >; M2 = message_filters::NullType; M3 = message_filters::NullType; M4 = message_filters::NullType; M5 = message_filters::NullType; M6 = message_filters::NullType; M7 = message_filters::NullType; M8 = message_filters::NullType]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.129697] (coding_challenge) StderrLine: {'line': b'  270 |   Connection \x1b[01;36m\x1b[KaddCallback\x1b[m\x1b[K( C& callback)\n'}
[1.130214] (coding_challenge) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.130273] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/signal9.h:270:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.130318] (coding_challenge) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/usama/autoronto/coding_test/src/coding_challenge/src/subscriber_member_function.cpp:22\x1b[m\x1b[K:\n'}
[1.130361] (coding_challenge) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/message_filters/synchronizer.h:304:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[1.130399] (coding_challenge) StderrLine: {'line': b'  304 |     return signal_.addCallback(callback, t\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[1.130436] (coding_challenge) StderrLine: {'line': b'      |                                           \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[1.219019] (-) TimerEvent: {}
[1.321505] (-) TimerEvent: {}
[1.422052] (-) TimerEvent: {}
[1.523304] (-) TimerEvent: {}
[1.623931] (-) TimerEvent: {}
[1.724532] (-) TimerEvent: {}
[1.825676] (-) TimerEvent: {}
[1.926294] (-) TimerEvent: {}
[2.028818] (-) TimerEvent: {}
[2.131863] (-) TimerEvent: {}
[2.232937] (-) TimerEvent: {}
[2.337466] (-) TimerEvent: {}
[2.441189] (-) TimerEvent: {}
[2.542652] (-) TimerEvent: {}
[2.645092] (-) TimerEvent: {}
[2.746655] (-) TimerEvent: {}
[2.849196] (-) TimerEvent: {}
[2.953385] (-) TimerEvent: {}
[2.978781] (coding_challenge) StderrLine: {'line': b'make[2]: *** [CMakeFiles/listener.dir/build.make:63: CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o] Error 1\n'}
[2.979046] (coding_challenge) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:80: CMakeFiles/listener.dir/all] Error 2\n'}
[2.979210] (coding_challenge) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[2.981046] (coding_challenge) CommandEnded: {'returncode': 2}
[3.038323] (coding_challenge) JobEnded: {'identifier': 'coding_challenge', 'rc': 2}
[3.048424] (-) EventReactorShutdown: {}
